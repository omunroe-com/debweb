#use wml::debian::template title="Come lavorare sulle pagine web Debian" BARETITLE=true
#use wml::debian::toc
#use wml::debian::translation-check translation="bc66db8592a5b03cf67480ae2e3df889eb158f0c" maintainer="skizzhg"

<toc-display/>


<toc-add-entry name="general">Informazioni generali</toc-add-entry>


<h3>Risorse richieste</h3>
<p>Se si vuole lavorare al nostro sito web, bisogna essere preparati a memorizzare almeno
250 MB di dati sul proprio disco. Questa è infatti l'attuale dimensione dell'archivio dei
sorgenti. Se (per errore) si ricostruiscono tutte le pagine, si avrà bisogno
almeno del doppio di questo spazio. Se si fa un checkout parziale allora
basterà molto meno spazio, come i 50 Mb per la directory english/.</p>

<h3>Checkout parziali</h3>

<p>Molte persone non vogliono avere tutto l'albero <code>webwml</code>
estratto dal repository git ma ciò può causare la mancanza di file e compilazioni errate
nel caso qualcuno abbia aggiunto nuovi, cruciali file e non si sia fatto un
checkout completo. Si ricordi di verificare la presenza di
tutti i file richiesti (come .wmlrc) prima di protestare con noi.</p>

<h3><q>Cosa sono queste linee che cominciano per '#'?</q></h3>

<p>Nel WML una linea che comincia per '#' è un commento. Questa forma è preferita ai
commenti HTML perché non è inserita nella pagina finale.</p>

<p>Si legga la pagina su come <a href="using_wml">usare il WML</a> per ulteriori
informazioni sul WML.</p>

<toc-add-entry name="etiquette">Etichetta per i redattori</toc-add-entry>

<h3><q>Posso modificare questa pagina?</q></h3>

<p>Dipende. Se ci si accorge di una svista, come un errore di battitura, lo si corregga pure.</p>

<p>Anche se si nota che manca qualche pezzo di informazione si faccia la
correzione.</p>

<p>Se si pensa che una parte sia brutta e andrebbe riscritta, si scriva a debian-www in
modo che se ne possa parlare. Probabilmente saremo tutti d'accordo.</p>

<p>Se si nota un problema in un template (ad esempio un file nella directory
webwml/english/template/debian), si pensi bene prima di fare il commit
della modifica, poiché le modifiche ai template fanno spesso in modo che
grandi porzioni del sito vengano ricostruite.</p>

<h3>Quando si aggiungono nuove directory, si aggiunga anche il Makefile!</h3>

<p>Un'attenzione particolare va prestata all'aggiunta di directory al repository git. Se la
directory attuale è inserita nel ../Makefile allora <b>si deve</b> creare un
Makefile nella nuova directory altrimenti <tt>make</tt> darà un messaggio di errore.</p>

<h3>Usare un inglese chiaro e semplice</h3>

<p>Poiché le pagine web Debian sono lette da persone che non sono di madre-lingua
inglese e che devono tradurre in altre lingue, è meglio scrivere in inglese
semplice e chiaro evitando l'uso di forme gergali, dialettali o emoticon.
</p>

<p>Se si utilizza una di queste forme allora si aggiunga un commento che ne spieghi
il significato.</p>

<p>
In caso di dubbi o correzioni si invita a contattare il <a
href="mailto:debian-l10n-english@lists.debian.org">team di localizzazione inglese</a>.
</p>

<h3>Leggere i README</h3>

<p>Alcune directory contengono un README che aiuta a capire
com'è organizzata la directory. Esso fornisce anche ogni
informazione necessaria per lavorare in quell'area.</p>

<h3>Separare le modifiche dei contenuti da quelle della formattazione</h3>

<p>Effettuare sempre separatamente le patch o i commit con modifiche ai
contenuti da quelli con modifiche della formattazione. Se fatti insieme, è
molto più difficile per i traduttori trovare le differenze. Se si lancia
<kbd>git diff -u</kbd> con qualche cambiamento misto, si potrà constatare quale
miscuglio ne venga fuori.</p>

<p>In generale evitare modifiche random della formattazione. Rendere vecchie
parti delle pagine XHTML/XML-compliant non dovrebbe essere fatto insieme ad
altre modifiche nello stesso commit.
(E si ricordi che il nuovo materiale può e deve essere scritto bene
dall'inizio).</p>


<h3>Aggiornare anche le traduzioni, se possibile</h3>

<p>Alcune modifiche sono indipendenti dalla lingua usata nel file WML, come
modifiche di URL o di codice Perl. Anche la correzione di errori di battitura
rientra nella stessa categoria, poiché i traduttori li avranno ignorati nella
traduzione.
Perciò con le modifiche indipendenti dalla lingua, si possono effettuare le
modifiche in tutti i file tradotti anche non conoscendo le altre lingue
ed incrementare il numero di versione negli header translation-check.</p>

<p>Non è difficile per i traduttori fare questo lavoro essi stessi
e può esserci l'inconveniente per i redattori di madre lingua inglese di dover
avere un checkout completo sul quale operare. Comunque vi incoraggiamo a farlo
per evitare che due dozzine di persone lavorino a qualcosa che può essere fatto
velocemente da una sola.</p>

<p>Inoltre, per rendere l'applicazione di queste modifiche ancora più
facile, si può usare lo script
<a href="using_git#translation-smart-change"><code>smart_change.pl</code></a>
nella directory di livello più alto del modulo git webwml.</p>


<toc-add-entry name="links">Collegamenti</toc-add-entry>

<h3><q>Questo collegamento non è corretto. Posso cambiarlo?</q></h3>

<p>La configurazione del server web comprende l'uso
della <a href="content_negotiation">negoziazione dei contenuti</a>,
quindi non si dovrebbe cambiare alcun link interno.
In effetti noi suggeriamo di non cambiare alcun link. Se si crede
che ce ne siano di non corretti si scriva a debian-www prima di cambiarlo.</p>

<h3>Correggere link</h3>

<p>Se si nota un link ad un sito web esterno che porta ad una ridirezione
(301, 302, a &lt;meta&gt; redirect, o una pagina <q>This page has moved.</q>)
si avverta debian-www.</p>
	
<p>Se si trova un link che non funziona (404, 403 o una pagina che non è quella che
dovrebbe esserci), si sistemi il problema e si mandi un messaggio a debian-www in modo
che i traduttori possano fare lo stesso aggiornamento. Meglio ancora: si aggiornino
tutte le traduzioni e l'intestazione translation-check.</p>

<toc-add-entry name="special">Separazione dei testi dai dati</toc-add-entry>

<h3><q>Cosa sono i file pippo.def e pippo.data?</q></h3>

<p>Per permettere una più semplice traduzione, abbiamo separato le
parti generiche (data) dalle parti testuali (text) di alcune pagine. I
traduttori devono solo copiare e tradurre le parti testuali di esse,
le parti generiche saranno aggiunte automaticamente.</p>

<p>Un esempio può aiutarne la comprensione. Vengono utilizzati alcuni file per
generare la pagina dei listini dei venditori in <code>CD/vendors</code>:</p>

<dl>
  <dt><code>index.wml</code>:</dt>
      <dd>Il testo in cima alla pagina dei venditori si trova in questa pagina.
      Una copia tradotta di questa pagina dovrebbe trovarsi in ogni directory propria della lingua.</dd>
  <dt><code>vendors.CD.def</code>:</dt>
      <dd>Questo contiene tutte le parti del testo di cui si ha bisogno per ogni
      voce dei venditori. Le traduzioni sono aggiunte mediante
      <code>&lt;<var>lingua</var>&gt;/po/vendors.<var>xy</var>.po</code>.</dd>
  <dt><code>vendors.CD</code>:</dt>
      <dd>Questo file contiene le voci dei venditori che sono indipendenti
      dalla lingua, di conseguenza un traduttore non ha bisogno di toccare questo file.</dd>
</dl>

<p>Quando qualcuno tramite <email "cdvendors@debian.org"> segnala un
nuovo venditore, esso sarà aggiunto a <code>debiancd.db</code>, che sarà
trasformato in formato WML come <code>vendors.CD</code> (usando
<code>getvendors.pl</code>), ed infine WML e i makefile faranno la loro magia:
tutte le traduzioni saranno ricostruite usando il testo tradotto già esistente
ma con l'aggiunta dei dati del nuovo venditore. (Una traduzione aggiornata in
cambio di niente!)</p>

<toc-add-entry name="newpage">Aggiungere nuove pagine</toc-add-entry>

<p>Aggiungere nuove pagine a Debian è molto semplice. Tutto il lavoro di
creazione dell'intestazione e del piè di pagina è fatto da wml. Tutto quello
che si deve fare è includere una linea come la seguente all'inizio del nuovo file:</p>

<pre><protect>
#use wml::debian::template title="Titolo della pagina"
</protect></pre>

<p>seguita dal corpo del testo. Tutte le pagine dovrebbero usare il modello
<code>wml::debian::template</code> a meno che non ne usino uno particolare
creato per quella particolare sezione (come le news e le pagine sulla sicurezza).</p>

<p>Il modello che abbiamo permette di definire alcune variabili che
influenzano la pagina creata. Questo dovrebbe evitare di rendere
necessario creare altri modelli: molti cambiamenti dovrebbero essere fatti
semplicemente. Le variabili attualmente disponibili sono:</p>

<dl>
<dt>BARETITLE="true"</dt>
	<dd>Elimina la parte "Debian --" che è in genere
	   inserita prima dei tag &lt;title&gt;.</dd>
<dt>NOHEADER="true"</dt>
	<dd>Rimuove l'intestazione iniziale dalla pagina. Una intestazione
	   personalizzata può essere inclusa nel corpo.</dd>
<dt>NOMIRRORS="true"</dt>
        <dd>Rimuove la lista dei mirror dalla pagina. Di norma non è
           consigliato usarlo, fatta eccezione per poche pagine.</dd>
<dt>NOHOMELINK="true"</dt>
	<dd>Rimuove il link che fa tornare alla pagina principale di Debian,
	   che è normalmente aggiunto nella parte bassa della pagina.</dd>
<dt>NOLANGUAGES="true"</dt>
	<dd>Rimuove i collegamenti alle altre lingue, che sono di solito
	   aggiunti alla fine della pagina.</dd>
<dt>GEN_TIME="true"</dt>
	<dd>Mostra come data di ultima modifica quella del file html generato
	   anziché quella del file sorgente wml.</dd>
<dt>NOCOPYRIGHT="true"</dt>
	<dd>Rimuove il copyright dal piè di pagina.</dd>
</dl>

<p>Si noti che è possibile usare qualsiasi stringa per assegnare un valore a queste
variabili: <q>true</q>, <q>yes</q>, <q>foo</q>, non ha importanza.</p>

<p>Un esempio si ha nelle pagine dei port che hanno la loro intestazione.
<code>ports/arm/index.wml</code> usa:</p>

<pre><protect>
#use wml::debian::template title="ARM Port" NOHEADER="yes"
</protect></pre>

<p>Se si vuole fare qualcosa che non è previsto dal modello attuale, si provi a
considerare l'ipotesi di estendere il modello. Se non è possibile estenderlo
mantenendo la compatibilità con l'attuale allora si provi a farne uno nuovo che
sia un superset di uno esistente. Questo permetterà di convertire le pagine al
proprio modello al prossimo grosso aggiornamento (in genere ogni 6 mesi
massimo).</p>

<p>Se si sta creando una pagina che è generata da uno script si provi a vedere 
se l'uso dei tag di &lt;gettext&gt; può facilitare l'aggiornamento
delle traduzioni.</p>

# think of a good example for <gettext> in new pages

<toc-add-entry name="inclusion">Inclusione di altri file</toc-add-entry>

<p>Se si vuole separare alcune parti della propria pagina in un file distinto
   (che sarà poi incluso tramite il file principale) si usi
   l'estensione <code>.src</code> se il file ha dei contenuti che dovrebbero
   essere tradotti poiché in questo modo le modifiche al file incluso vengono
   controllate come per i file <code>.wml</code> ordinari. Se si usa qualsiasi 
   altra estensione, come <code>.inc</code>, i traduttori non saranno avvisati 
   degli aggiornamenti e diversi linguaggi potrebbero avere diversi contenuti.</p>

<toc-add-entry name="newdir">Aggiungere nuove directory</toc-add-entry>

<p>Nota: <strong>Non</strong> creare alcuna directory che si chiami
<code>install</code>. Questo confonderebbe il programma make e le pagine in
quella directory non sarebbero aggiornate automaticamente.</p>

<p>Segue un esempio di come si aggiunge una directory al sito web.
</p>
<pre>
   mkdir foo
   git add foo
   cd foo
   cp ../intro/Makefile .
   git add Makefile
</pre>

<p>Editare il Makefile nella directory padre e si aggiunga la directory
attuale nella variabile <code>SUBS</code>. Questo farà sì che la
directory sia considerata durante la creazione del sito.</p>

<p>Alla fine si faccia il commit al repository di tutti i cambiamenti con
</p>
<pre>
   git commit Makefile foo
</pre>
