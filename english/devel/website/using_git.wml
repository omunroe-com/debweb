#use wml::debian::template title="Using git to manipulate website source code"

<p>Git is a <a href="https://en.wikipedia.org/wiki/Version_control">version
control system</a> that helps to manage having multiple people work on
the same material simultaneously. Every user can hold a local copy of a main
repository. The local copies can be on the same machine, or across the world.
Users can then modify the local copy as they wish and when the modified
material is ready, commit the changes and push them back to the main
repository.</p>

<p>Git will not let you push a commit directly if the remote repository has
any newer commits (modifications) than your local copy on the same branch.
In such case where conflict takes place, please fetch and update your local
copy first and <code>rebase</code> your new modifications on top of the latest
commit as needed.
</p>

<h3><a name="write-access">git write access</a></h3>

<p>
If you need write access to the repository, please request it via
the <url https://salsa.debian.org/webmaster-team/webwml/> web interface after
logging in to Debian's Salsa platform.
If you are new to Debian's website development and have no previous experience,
please also send a mail to <a href="mailto:debian-www@lists.debian.org">
debian-www@lists.debian.org</a> with your self introduction. Please write
something useful in your introduction, like which language or which part of
the website you plan to work on, and who would vouch for you.
</p>

<h3><a name="work-on-repository">Working on the repository</a></h3>

<h4><a name="clone-local-repo-copy">Clone a local copy of the repository</a></h4>

<p>First, you need to install git to work with the repository. Next,
configure your user and e-mail details on your computer (please refer
to general git documentation to learn how to do this). Then, you can
clone the repository (in other words, make a local copy of it)
in one of two ways.</p>

<p>The recommended way to work on webwml is to first register an
account on salsa.debian.org and enable git SSH access by uploading an
SSH public key into your salsa account. See the <a
href="https://salsa.debian.org/help/ssh/README.md">salsa help
pages</a> for more details on how to do that. Then you can clone the
webwml repository using the following command:</p>

<pre>
   git clone git@salsa.debian.org:webmaster-team/webwml.git
</pre>

<p>If you don't have a salsa account, an alternative method is to
clone the repository using the HTTPS protocol:</p>

<pre>
  git clone https://salsa.debian.org/webmaster-team/webwml.git
</pre>

<p>This will give you the same repository copy locally, but you will
not be able to directly push changes back directly this way.</p>

<p>Cloning the whole webwml repository will require downloading about
500MB of data, thus it may be difficult for those with slow or
unstable Internet connections. You may try shallow cloning with
a minimum depth first for a smaller initial download:</p>

<pre>
  git clone git@salsa.debian.org:webmaster-team/webwml.git --depth 1
</pre>

<p>After obtaining a usable (shallow) repository, you can deepen the
local shallow copy and eventually convert it to a full local
repository: </p>

<pre>
  git fetch --deepen=1000 # deepen the repo for another 1000 commits
  git fetch --unshallow   # fetch all missing commits, convert the repo to a complete one
</pre>

<h4><a name="partial-content-checkout">Partial content checkout</a></h4>

<p>You can create a checkout for only a subset of the pages like this:</p>

<pre>
   $ git clone --no-checkout git@salsa.debian.org:webmaster-team/webwml.git
   $ cd webwml
   $ git config core.sparseCheckout true
   In webwml: Create the file .git/info/sparse-checkout with content like this
   (if you only want the base files, English, Catalan and Spanish translations):
      /*
      !/[a-z]*/
      /english/
      /catalan/
      /spanish/
   Then:
   $ git checkout --
</pre>

<h4><a name="submit-changes">Submitting local changes</a></h4>

<p>Every few days (and definitely before starting some editing work!)
you should do a</p>

<pre>
   git pull
</pre>

<p>to retrieve any files from the repository which have changed.</p>

<p>Note: git is a distributed (not centralised) version control
system. This means that when you commit changes they will only be
stored in your local repository. To share them with others, you will
also need to push your changes to the central repository on salsa.</p>

<p><strong>So editing an English file will work like this:</strong></p>

<pre>
   $ git pull
</pre>

<p>Now make changes to files. When you are done, commit your changes
to your local repository using:</p>

<pre>
   $ git add path/to/file(s)
   $ git commit -m "Your commit message"
</pre>

<p>Then, push your changes to the Salsa repo:</p>

<pre>
   $ git push
</pre>

<p>That's a very basic summary of how to use git to manipulate the
Debian website's source code. For more information on git, please read
git's documentation.</p>

### FIXME: Is the following still true? holgerw
### FIXME: Seems not true anymore. Needs fixup. -- hosiet-guest
<h4><a name="closing-debian-bug-in-git-commits">Closing Debian bugs in git commits</a></h4>

<p>
If you include <code>Closes: #</code><var>nnnnnn</var> in your commit log
entry, then bug number <code>#</code><var>nnnnnn</var> will be closed
automatically when you push your changes. The precise form of this is the same as
<a href="$(DOC)/debian-policy/footnotes.html#f17">in Debian policy</a>.</p>

<h4><a name="links-using-http-https">Linking using HTTP/HTTPS</a></h4>

<p>Many Debian websites support SSL, so please use HTTPS links where
possible and sensible. <strong>However</strong>, some
Debian/DebConf/SPI/etc websites either don't have have HTTPS support
or only use the SPI CA (and not an SSL CA trusted by all browsers). To
avoid causing error messages for non-Debian users, please do not link
to such sites using HTTPS.</p>

<p>The git repository will reject commits containing plain HTTP links
for Debian websites that support HTTPS or containing HTTPS links for
the Debian/DebConf/SPI websites that are known to either not support
HTTPS or use certificates signed only by SPI.</p>

<h3><a name="translation-work">Working on translations</a></h3>

<p>If you change translated files, you need to update the
translation-check header to match the git commit hash of the
corresponding change in the English file. You can find that hash
with</p>

<pre>
$ git log path/to/english/file
</pre>

<p>If you do a new translation of a file, please use the <q>copypage.pl</q> script
and it will create a template for your language, including the correct
translation header.</p>

<h3><a name="translation-smart-change">Translation changes with smart_change.pl</a></h3>

<p>There is a *NEW* implementation of smart_change.pl which is limited to
supporting git commit hashes. To use it:</p>

<ul>
  <li>Make the changes to the original file(s), and commit</li>
  <li>Update translations</li>
  <li>Run smart_change.pl - it will pick up the changes and update
      headers in the translation files</li>
  <li>Review the changes (for example with <q>git diff</q>)</li>
  <li>Commit and push the changes</li>
</ul>

<h3><a name="notifications">Getting notifications</a></h3>

<p>We have configured the webwml project in Salsa so that commits are
shown in the IRC channel #debian-www.</p>

<p>If you want to receive notifications via e-mail when there are
commits in the webwml repo, please subscribe to the <q>www.debian.org</q>
pseudopackage via tracker.debian.org and activate the <q>vcs</q> keyword
there, following these steps (only once):</p>

<ul>
  <li>Open a web browser and go to <url https://tracker.debian.org/pkg/www.debian.org></li>
  <li>Subscribe to the <q>www.debian.org</q> pseudopackage. (You can authenticate
      via SSO or register an email and password, if you were not using
      tracker.debian.org already for other purposes).</li>
  <li>Go to <url https://tracker.debian.org/accounts/subscriptions/>, then to <q>modify
      keywords</q>, check <q>vcs</q> (if it's not checked) and save.</li>
  <li>From now on you will get e-mails when somebody commits to the
      webwml repo. We will add the other webmaster-team repositories soon.</li>
</ul>
